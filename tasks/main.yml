---
# tasks file for ansible-coreos-nginx

- name: Include OS Specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: If system is container specific, include Docker variables
  when: '"{{ ansible_os_family }}" in container_specific_os_family'
  include_vars: nginx_docker.yml

- include: configure_HostOS.yml

################################################################################
#                       
#                             GENERATE COFNIG FILES
- name: Copy default web page to Host OS
  copy:
    src: '{{ host_static_html_directory }}'
    dest: '{{ nginx_host_config }}'
    mode: '0644'
  register: conf_html

- include: ssl_config.yml
  when: ssl_key_fname is defined and
        ssl_cert_fname is defined

- include: 'vhost.yml'

- name: Copy nginx configuration in place.
  template:
    src: nginx.conf.j2
    dest: '{{ nginx_conf_file_path }}'
    owner: '{{ user_host_directory }}'
    group: '{{ group_host_directory }}'
    mode: 0644
  register: nginx_configured


################################################################################
#                       
#                             Docker

# - name: Download Docker image
#   docker_image:
#     name: '{{ nginx_container_name }}'
#     tag: '{{ nginx_docker_tag }}'
#     state: present

# - name: stop nginx container
#   when: '{{ conf_ssl | changed }}  ||
#          {{ conf_vhosts | changed }}  ||
#          {{ conf_html | changed }}'
#   docker:
#     image: '{{ nginx_container_name }}:{{ nginx_docker_tag }}'
#     name: '{{ nginx_container_name }}'
#     ports: '{{ nginx_published_ports }}'
#     expose: '{{ nginx_exposed_ports }}'
#     volumes: '{{ nginx_exposed_volumes }}' 
#     state: stopped
#     restart_policy: 'always'
#     log_driver: 'syslog'
#     log_opt:
#       syslog-tag: "{{ nginx_container_name }}"

- name: launch nginx container
  docker:
    image: '{{ nginx_container_name }}:{{ nginx_docker_tag }}'
    name: '{{ nginx_container_name }}'
    ports: '{{ nginx_published_ports }}'
    expose: '{{ nginx_exposed_ports }}'
    volumes: '{{ nginx_exposed_volumes }}' 
    state: started
    restart_policy: 'always'
    log_driver: 'syslog'
    log_opt:
      syslog-tag: "{{ nginx_container_name }}"
